---
import { documentMdToHtml } from "../../lib/markdown-parsing.mjs";

const summary = await documentMdToHtml(
  "src/documents/01_Summary.md",
  "summary",
);

const dutch = await documentMdToHtml("src/documents/01_Dutch.md", "dutch");

const translation = await documentMdToHtml(
  "src/documents/01_Translation.md",
  "translation",
);
---

<section id="summary" class="md summary">
  <header>Summary</header>
  <div set:html={summary}></div>
</section>

<section id="documents" class="md document">
  <header>
    <span data-doc="translation" class="active">Translation</span>
    <span data-doc="dutch">Dutch</span>
  </header>
  <div class="translation shown"><div set:html={translation}></div></div>
  <div class="dutch"><div set:html={dutch}></div></div>
</section>

<script>
  const panels = document.querySelectorAll(".document > div");
  const tabs = document.querySelectorAll(".document header span");

  tabs.forEach((tab) => {
    tab.addEventListener("click", () => {
      tabs.forEach((_tab) => _tab.classList.remove("active"));
      panels.forEach((panel) => panel.classList.remove("shown"));
      tab.classList.add("active");
      document
        .querySelector(".document ." + tab.dataset.doc)
        .classList.add("shown");
    });
  });

  document.querySelectorAll("a[data-footnote-ref]").forEach((anchor) => {
    const id = anchor.href.split("#")[1];
    anchor.addEventListener("mouseover", () => {
      document.querySelector(`li#${id}`).classList.add("anchor-hovered");
    });
    anchor.addEventListener("mouseout", () => {
      document.querySelector(`li#${id}`).classList.remove("anchor-hovered");
    });
  });
</script>

<script type="module" hoist>await import("../glossary.mjs");</script>

<style>
  .summary {
    background-color: var(--palette-0);
    border-radius: var(--radius-2);
    padding: var(--size-4) var(--size-5);
  }

  .document {
    background-color: var(--palette-0);
    background-image: url("/paper.png");
    background-repeat: repeat;
    border: 5px solid var(--palette-3);
    border-radius: var(--custom-border);
    padding: var(--size-5) var(--size-10);
  }

  .document > div:not(.shown) {
    display: none;
  }

  .document header {
    align-items: center;
    display: flex;
    justify-content: space-evenly;
    margin-bottom: var(--size-7);

    span {
      cursor: pointer;
      opacity: 0.5;

      &:hover {
        opacity: 1;
      }
    }

    span.active {
      border-bottom: 2px solid var(--palette-8);
      cursor: default;
      opacity: 1;
    }
  }

  .document :global(p) {
    font-family: var(--font-serif);
    font-size: var(--font-size-3);
  }

  .md {
    :global(p) {
      line-height: 1.8;
    }

    :global(p + p) {
      margin-top: var(--size-3);
    }

    :global(section.footnotes) {
      border-top: 1px solid var(--palette-9);
      padding-top: var(--size-3);
      margin-top: var(--size-5);
    }

    :global(section.footnotes p) {
      font-size: var(--font-size-1);
    }

    :global(section.footnotes h2) {
      display: none;
    }

    :global(li[id]) {
      scroll-margin-top: var(--size-10);
      transition: background-color 0.2s ease-in-out;

      &.anchor-hovered,
      &:target {
        background-color: var(--palette-1);
        border-radius: var(--radius-2);
      }
    }

    :global(.glossary) {
      border-bottom: 2px dashed var(--palette-8);
      cursor: help;
      display: inline-block;
    }

    :global(.gloss) {
      background: var(--surface-1);
      border: 5px solid var(--palette-3);
      border-radius: var(--custom-border);
      box-shadow: 8px 8px 8px rgba(0, 0, 0, 0.7);
      font-family: var(--font-sans);
      font-size: var(--font-size-2);
      font-style: normal;
      max-width: 40%;
      opacity: 0;
      padding: var(--size-2);
      pointer-events: none;
      position: absolute;
      transition: opacity 300ms ease-in-out;

      :global(.header) {
        color: var(--palette-8);
        display: block;
        font-weight: bold;
        text-transform: uppercase;
      }

      &.shown {
        opacity: 1;
        pointer-events: all;
      }
    }
  }
</style>
