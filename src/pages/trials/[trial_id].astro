---
import BaseLayout from "../../layouts/base.astro";
import { records } from "../../dataset.mjs";

export async function getStaticPaths() {
  const paths = records.map((record) => ({
    params: { trial_id: record.ID },
    props: { record: record },
  }));

  return paths;
}

// const { trial_id } = Astro.request.params;
const { record } = Astro.props;
---

<BaseLayout>
  <dl>
    {Object.entries(record)
        .filter(([key, value]) => typeof value === 'string')
        .map(([key, value]) => (
          <dt>{key}</dt><dd>{value}</dd>
        ))}
    {() => {
      if (record["trial_locations"].length) {
        return (
          <dt>Locations:</dt>
          <dd>{
            record["trial_locations"].map(
              (location) =>
              <p>{location["Location"]} { location["Relation to case"] ? ` -- ${location["Relation to case"]}`: '' }</p>
            )
          }</dd>
        );
      }
    }}
  </dl>
</BaseLayout>

<style>
  dl {
    display: flex;
    flex-flow: row wrap;
  }

  dt,
  dd {
    padding: var(--size-2) var(--size-4);
    margin: 0;
  }

  dt ~ dt,
  dd ~ dd {
    border-top: 1px solid var(--indigo-9);
  }

  dt {
    flex-basis: 25%;
    background: var(--indigo-2);
    text-align: right;
  }

  dd {
    flex-basis: 70%;
    flex-grow: 1;
  }
</style>
