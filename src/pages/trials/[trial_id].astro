---
import BaseLayout from "../../layouts/base.astro";
import DocumentViewer from "../../components/DocumentViewer.astro";
import TrialPlaces from "../../components/TrialPlaces.astro";
import MetadataPanel from "../../components/MetadataPanel.astro";
import Icon from "../../components/Icon.astro";
import { records } from "../../dataset.mjs";

export async function getStaticPaths() {
  const paths = records.map((record, index, array) => ({
    params: { trial_id: record.ID },
    props: {
      record: record,
      prev: array[index - 1]?.ID,
      next: array[index + 1]?.ID,
    },
  }));

  return paths;
}

const { record, prev, next } = Astro.props;
const pageTitle = `${record["Date (Y/M/D)"].split("-")[0]} ${
  record["Name on Document"]
}`;
---

<BaseLayout>
  <nav>
    <div>
      <a href="#details">Details</a>
      <a href="#summary">Summary</a>
      <a href="#documents">Documents</a>
      {() => {
        if (record["trial_locations"].length) {
          return <a href="#places">Places</a>;
        }
      }}
    </div>
    <div>
      {prev ? (
        <a href={`${Astro.site.pathname}trials/${prev}/`}>
          <Icon name="caret-left" />
        </a>
      ) : (
        <a>
          <Icon name="caret-left" />
        </a>
      )}
      {next ? (
        <a href={`${Astro.site.pathname}trials/${next}/`}>
          <Icon name="caret-right" />
        </a>
      ) : (
        <a>
          <Icon name="caret-right" />
        </a>
      )}
    </div>
  </nav>

  <header><h2>{pageTitle}</h2></header>

  <MetadataPanel {record} />

  <DocumentViewer {record} />

  {(record["trial_locations"].length) ? <TrialPlaces {record} /> : null}

  {() => {
    if (import.meta.env.DEV) {
      return (
        <details>
          <summary style="box-sizing: content-box;">debug</summary>
          <pre>{JSON.stringify(record, null, 2)}</pre>
        </details>
      );
    }
  }}
</BaseLayout>

<style>
  nav {
    align-self: center;
    background: hsla(210deg 17% 98% / 0.8); /* --surface-1 / 0.8 */
    border-radius: var(--radius-2);
    display: flex;
    flex-wrap: wrap;
    gap: var(--size-3);
    justify-content: center;
    margin-right: calc(var(--size-2) * -1);
    margin-top: var(--size-1);
    padding: var(--size-2);
    position: sticky;
    top: var(--size-1);
    width: fit-content;
    z-index: 2;

    div {
      display: flex;
      flex-wrap: wrap;
      gap: var(--size-3);
      justify-content: center;
    }

    a {
      background-color: var(--surface-3);
      border-radius: var(--radius-2);
      color: var(--text-1);
      padding: 4px 8px;
      text-decoration: none;

      &[href] {
        background-color: var(--palette-2);

        &:hover {
          background-color: var(--palette-4);

          :global(svg) {
            fill: var(--palette-8);
          }
        }
      }
    }
  }

  header {
    margin: var(--size-4) 0;
  }

  h2 {
    overflow: hidden;
    text-align: center;

    &:before,
    &:after {
      background-color: var(--palette-4);
      content: "";
      display: inline-block;
      height: 1px;
      position: relative;
      vertical-align: middle;
      width: 50%;
    }

    &:before {
      /* background: linear-gradient(to right, rgba(0, 0, 0, 0), #000); */
      margin-left: -50%;
      right: var(--size-4);
    }

    &:after {
      left: var(--size-4);
      margin-right: -50%;
    }
  }

  /* lift the secondary nav up into the header area */
  @media (min-width: 1280px) {
    nav {
      align-self: flex-end;
      margin-top: -40px !important;
      justify-content: flex-end;
    }
  }
</style>
